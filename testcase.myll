#!/usr/bin/myll // ignored by the compiler

namespace Namespace
{
	/*
	[bitwise_ops]
	enum Moep
	{
		A,
		B = 3,
		C
	}
	*/
	// 					const char* argv[]
	func main(int argc, const char*[] argv) -> int
	{
		if(a+b|8==c)
			(move)(a)(?b)(!c)my_var;
		else
			left::fn() += 9|8+1;
		a = new Class( 1, "Blah" );
		2**8;
		//var int i = 9;
	}

	class Class
	{
		field std::array<int*[],5>*[] x;
		field int _a, _b;
	public:
		[static]
		field float c, d;

		//[inline, const] // atm no effect
		func a() -> int { return _a; }

	private:
		class SubClass
		{
			method sub_meth(anothersubclass* other) -> void {}
			field int sub_var;
		}

	protected:
		class AnotherSubClass
		{
			class SubSubClass{}
		}
	}
}
