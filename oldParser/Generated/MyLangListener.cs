//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\sor\Documents\Visual Studio 2012\Projects\MyLangParser\MyLang.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace MyLang {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="MyLangParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public interface IMyLangListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>ExpressionStmt</c>
	/// labeled alternative in <see cref="MyLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionStmt([NotNull] MyLangParser.ExpressionStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExpressionStmt</c>
	/// labeled alternative in <see cref="MyLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionStmt([NotNull] MyLangParser.ExpressionStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>VarsDecl</c>
	/// labeled alternative in <see cref="MyLangParser.vars_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarsDecl([NotNull] MyLangParser.VarsDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VarsDecl</c>
	/// labeled alternative in <see cref="MyLangParser.vars_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarsDecl([NotNull] MyLangParser.VarsDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>NopExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNopExpr([NotNull] MyLangParser.NopExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NopExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNopExpr([NotNull] MyLangParser.NopExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>LessThan</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLessThan([NotNull] MyLangParser.LessThanContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LessThan</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLessThan([NotNull] MyLangParser.LessThanContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>UnaryMinus</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryMinus([NotNull] MyLangParser.UnaryMinusContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UnaryMinus</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryMinus([NotNull] MyLangParser.UnaryMinusContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.characterType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharacterType([NotNull] MyLangParser.CharacterTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.characterType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharacterType([NotNull] MyLangParser.CharacterTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.advancedType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdvancedType([NotNull] MyLangParser.AdvancedTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.advancedType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdvancedType([NotNull] MyLangParser.AdvancedTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.exprs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprs([NotNull] MyLangParser.ExprsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.exprs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprs([NotNull] MyLangParser.ExprsContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Tier200</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTier200([NotNull] MyLangParser.Tier200Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Tier200</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTier200([NotNull] MyLangParser.Tier200Context context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.anyType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnyType([NotNull] MyLangParser.AnyTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.anyType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnyType([NotNull] MyLangParser.AnyTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ParenExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenExpr([NotNull] MyLangParser.ParenExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenExpr([NotNull] MyLangParser.ParenExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>AddSub</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddSub([NotNull] MyLangParser.AddSubContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AddSub</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddSub([NotNull] MyLangParser.AddSubContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Tier9</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTier9([NotNull] MyLangParser.Tier9Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Tier9</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTier9([NotNull] MyLangParser.Tier9Context context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.order_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrder_OP([NotNull] MyLangParser.Order_OPContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.order_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrder_OP([NotNull] MyLangParser.Order_OPContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Tier8</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTier8([NotNull] MyLangParser.Tier8Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Tier8</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTier8([NotNull] MyLangParser.Tier8Context context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Tier7</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTier7([NotNull] MyLangParser.Tier7Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Tier7</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTier7([NotNull] MyLangParser.Tier7Context context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Tier6</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTier6([NotNull] MyLangParser.Tier6Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Tier6</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTier6([NotNull] MyLangParser.Tier6Context context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Tier5</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTier5([NotNull] MyLangParser.Tier5Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Tier5</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTier5([NotNull] MyLangParser.Tier5Context context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.scope_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScope_OP([NotNull] MyLangParser.Scope_OPContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.scope_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScope_OP([NotNull] MyLangParser.Scope_OPContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Tier4</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTier4([NotNull] MyLangParser.Tier4Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Tier4</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTier4([NotNull] MyLangParser.Tier4Context context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Tier3</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTier3([NotNull] MyLangParser.Tier3Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Tier3</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTier3([NotNull] MyLangParser.Tier3Context context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Tier2</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTier2([NotNull] MyLangParser.Tier2Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Tier2</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTier2([NotNull] MyLangParser.Tier2Context context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.add_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdd_OP([NotNull] MyLangParser.Add_OPContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.add_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdd_OP([NotNull] MyLangParser.Add_OPContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Tier1</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTier1([NotNull] MyLangParser.Tier1Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Tier1</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTier1([NotNull] MyLangParser.Tier1Context context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.class_extened_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClass_extened_expr([NotNull] MyLangParser.Class_extened_exprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.class_extened_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClass_extened_expr([NotNull] MyLangParser.Class_extened_exprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.bitor_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitor_OP([NotNull] MyLangParser.Bitor_OPContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.bitor_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitor_OP([NotNull] MyLangParser.Bitor_OPContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.anyTypeOrConst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnyTypeOrConst([NotNull] MyLangParser.AnyTypeOrConstContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.anyTypeOrConst"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnyTypeOrConst([NotNull] MyLangParser.AnyTypeOrConstContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>LessEqualThan</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLessEqualThan([NotNull] MyLangParser.LessEqualThanContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LessEqualThan</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLessEqualThan([NotNull] MyLangParser.LessEqualThanContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.comment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComment([NotNull] MyLangParser.CommentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.comment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComment([NotNull] MyLangParser.CommentContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>IdOrLitExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdOrLitExpr([NotNull] MyLangParser.IdOrLitExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IdOrLitExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdOrLitExpr([NotNull] MyLangParser.IdOrLitExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.idTplType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdTplType([NotNull] MyLangParser.IdTplTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.idTplType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdTplType([NotNull] MyLangParser.IdTplTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.castExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCastExpr([NotNull] MyLangParser.CastExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.castExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCastExpr([NotNull] MyLangParser.CastExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>FuncCallExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncCallExpr([NotNull] MyLangParser.FuncCallExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FuncCallExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncCallExpr([NotNull] MyLangParser.FuncCallExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>AttrPOD</c>
	/// labeled alternative in <see cref="MyLangParser.attrib"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttrPOD([NotNull] MyLangParser.AttrPODContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AttrPOD</c>
	/// labeled alternative in <see cref="MyLangParser.attrib"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttrPOD([NotNull] MyLangParser.AttrPODContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>StaticDecl</c>
	/// labeled alternative in <see cref="MyLangParser.class_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStaticDecl([NotNull] MyLangParser.StaticDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StaticDecl</c>
	/// labeled alternative in <see cref="MyLangParser.class_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStaticDecl([NotNull] MyLangParser.StaticDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProg([NotNull] MyLangParser.ProgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.prog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProg([NotNull] MyLangParser.ProgContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>NotEqual</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotEqual([NotNull] MyLangParser.NotEqualContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NotEqual</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotEqual([NotNull] MyLangParser.NotEqualContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Equal</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqual([NotNull] MyLangParser.EqualContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Equal</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqual([NotNull] MyLangParser.EqualContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>BlockStmt</c>
	/// labeled alternative in <see cref="MyLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockStmt([NotNull] MyLangParser.BlockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BlockStmt</c>
	/// labeled alternative in <see cref="MyLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockStmt([NotNull] MyLangParser.BlockStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>IndexExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexExpr([NotNull] MyLangParser.IndexExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IndexExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexExpr([NotNull] MyLangParser.IndexExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.newExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNewExpr([NotNull] MyLangParser.NewExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.newExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNewExpr([NotNull] MyLangParser.NewExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.initializationList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitializationList([NotNull] MyLangParser.InitializationListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.initializationList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitializationList([NotNull] MyLangParser.InitializationListContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>EnumDecl</c>
	/// labeled alternative in <see cref="MyLangParser.toplevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumDecl([NotNull] MyLangParser.EnumDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>EnumDecl</c>
	/// labeled alternative in <see cref="MyLangParser.toplevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumDecl([NotNull] MyLangParser.EnumDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.bitxor_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitxor_OP([NotNull] MyLangParser.Bitxor_OPContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.bitxor_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitxor_OP([NotNull] MyLangParser.Bitxor_OPContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>CtorDecl</c>
	/// labeled alternative in <see cref="MyLangParser.class_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCtorDecl([NotNull] MyLangParser.CtorDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CtorDecl</c>
	/// labeled alternative in <see cref="MyLangParser.class_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCtorDecl([NotNull] MyLangParser.CtorDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.idOrLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdOrLit([NotNull] MyLangParser.IdOrLitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.idOrLit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdOrLit([NotNull] MyLangParser.IdOrLitContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.pre_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPre_OP([NotNull] MyLangParser.Pre_OPContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.pre_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPre_OP([NotNull] MyLangParser.Pre_OPContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.pow_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPow_OP([NotNull] MyLangParser.Pow_OPContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.pow_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPow_OP([NotNull] MyLangParser.Pow_OPContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.deleteExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeleteExpr([NotNull] MyLangParser.DeleteExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.deleteExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeleteExpr([NotNull] MyLangParser.DeleteExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>FunctionDecl</c>
	/// labeled alternative in <see cref="MyLangParser.toplevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDecl([NotNull] MyLangParser.FunctionDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FunctionDecl</c>
	/// labeled alternative in <see cref="MyLangParser.toplevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDecl([NotNull] MyLangParser.FunctionDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.id_opt_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterId_opt_value([NotNull] MyLangParser.Id_opt_valueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.id_opt_value"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitId_opt_value([NotNull] MyLangParser.Id_opt_valueContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>CtorDef</c>
	/// labeled alternative in <see cref="MyLangParser.ctor_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCtorDef([NotNull] MyLangParser.CtorDefContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CtorDef</c>
	/// labeled alternative in <see cref="MyLangParser.ctor_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCtorDef([NotNull] MyLangParser.CtorDefContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Namespace</c>
	/// labeled alternative in <see cref="MyLangParser.toplevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespace([NotNull] MyLangParser.NamespaceContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Namespace</c>
	/// labeled alternative in <see cref="MyLangParser.toplevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespace([NotNull] MyLangParser.NamespaceContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.typePtr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypePtr([NotNull] MyLangParser.TypePtrContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.typePtr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypePtr([NotNull] MyLangParser.TypePtrContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.equal_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqual_OP([NotNull] MyLangParser.Equal_OPContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.equal_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqual_OP([NotNull] MyLangParser.Equal_OPContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>PropDecl</c>
	/// labeled alternative in <see cref="MyLangParser.prop_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropDecl([NotNull] MyLangParser.PropDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PropDecl</c>
	/// labeled alternative in <see cref="MyLangParser.prop_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropDecl([NotNull] MyLangParser.PropDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Attributes</c>
	/// labeled alternative in <see cref="MyLangParser.toplevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttributes([NotNull] MyLangParser.AttributesContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Attributes</c>
	/// labeled alternative in <see cref="MyLangParser.toplevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttributes([NotNull] MyLangParser.AttributesContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>VariableDecl</c>
	/// labeled alternative in <see cref="MyLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDecl([NotNull] MyLangParser.VariableDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>VariableDecl</c>
	/// labeled alternative in <see cref="MyLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDecl([NotNull] MyLangParser.VariableDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Tier100</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTier100([NotNull] MyLangParser.Tier100Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Tier100</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTier100([NotNull] MyLangParser.Tier100Context context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.memptr_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemptr_OP([NotNull] MyLangParser.Memptr_OPContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.memptr_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemptr_OP([NotNull] MyLangParser.Memptr_OPContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>PreCrementExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPreCrementExpr([NotNull] MyLangParser.PreCrementExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PreCrementExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPreCrementExpr([NotNull] MyLangParser.PreCrementExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.sizeofExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSizeofExpr([NotNull] MyLangParser.SizeofExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.sizeofExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSizeofExpr([NotNull] MyLangParser.SizeofExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.bitand_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitand_OP([NotNull] MyLangParser.Bitand_OPContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.bitand_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitand_OP([NotNull] MyLangParser.Bitand_OPContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>PostCrementExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPostCrementExpr([NotNull] MyLangParser.PostCrementExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>PostCrementExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPostCrementExpr([NotNull] MyLangParser.PostCrementExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.shift_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShift_OP([NotNull] MyLangParser.Shift_OPContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.shift_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShift_OP([NotNull] MyLangParser.Shift_OPContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.mult_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMult_OP([NotNull] MyLangParser.Mult_OPContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.mult_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMult_OP([NotNull] MyLangParser.Mult_OPContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>MulDivMod</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMulDivMod([NotNull] MyLangParser.MulDivModContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MulDivMod</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMulDivMod([NotNull] MyLangParser.MulDivModContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>GreaterThan</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGreaterThan([NotNull] MyLangParser.GreaterThanContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>GreaterThan</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGreaterThan([NotNull] MyLangParser.GreaterThanContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Tier104</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTier104([NotNull] MyLangParser.Tier104Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Tier104</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTier104([NotNull] MyLangParser.Tier104Context context);

	/// <summary>
	/// Enter a parse tree produced by the <c>FuncMeth</c>
	/// labeled alternative in <see cref="MyLangParser.funcmeth_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncMeth([NotNull] MyLangParser.FuncMethContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FuncMeth</c>
	/// labeled alternative in <see cref="MyLangParser.funcmeth_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncMeth([NotNull] MyLangParser.FuncMethContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameters([NotNull] MyLangParser.ParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameters([NotNull] MyLangParser.ParametersContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>FieldDecl</c>
	/// labeled alternative in <see cref="MyLangParser.field_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldDecl([NotNull] MyLangParser.FieldDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FieldDecl</c>
	/// labeled alternative in <see cref="MyLangParser.field_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldDecl([NotNull] MyLangParser.FieldDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ElementSelectExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElementSelectExpr([NotNull] MyLangParser.ElementSelectExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ElementSelectExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElementSelectExpr([NotNull] MyLangParser.ElementSelectExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Assign</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssign([NotNull] MyLangParser.AssignContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Assign</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssign([NotNull] MyLangParser.AssignContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ReturnStmt</c>
	/// labeled alternative in <see cref="MyLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStmt([NotNull] MyLangParser.ReturnStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ReturnStmt</c>
	/// labeled alternative in <see cref="MyLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStmt([NotNull] MyLangParser.ReturnStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ParensExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParensExpr([NotNull] MyLangParser.ParensExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ParensExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParensExpr([NotNull] MyLangParser.ParensExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.or_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOr_OP([NotNull] MyLangParser.Or_OPContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.or_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOr_OP([NotNull] MyLangParser.Or_OPContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.preOpExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPreOpExpr([NotNull] MyLangParser.PreOpExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.preOpExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPreOpExpr([NotNull] MyLangParser.PreOpExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Tier4_5</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTier4_5([NotNull] MyLangParser.Tier4_5Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Tier4_5</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTier4_5([NotNull] MyLangParser.Tier4_5Context context);

	/// <summary>
	/// Enter a parse tree produced by the <c>IfStmt</c>
	/// labeled alternative in <see cref="MyLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStmt([NotNull] MyLangParser.IfStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IfStmt</c>
	/// labeled alternative in <see cref="MyLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStmt([NotNull] MyLangParser.IfStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.anyTypeCS"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnyTypeCS([NotNull] MyLangParser.AnyTypeCSContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.anyTypeCS"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnyTypeCS([NotNull] MyLangParser.AnyTypeCSContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.signQualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSignQualifier([NotNull] MyLangParser.SignQualifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.signQualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSignQualifier([NotNull] MyLangParser.SignQualifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.tt_exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTt_exp([NotNull] MyLangParser.Tt_expContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.tt_exp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTt_exp([NotNull] MyLangParser.Tt_expContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>rest</c>
	/// labeled alternative in <see cref="MyLangParser.toplevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRest([NotNull] MyLangParser.RestContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>rest</c>
	/// labeled alternative in <see cref="MyLangParser.toplevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRest([NotNull] MyLangParser.RestContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ForStmt</c>
	/// labeled alternative in <see cref="MyLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForStmt([NotNull] MyLangParser.ForStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ForStmt</c>
	/// labeled alternative in <see cref="MyLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForStmt([NotNull] MyLangParser.ForStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>OperatorDecl</c>
	/// labeled alternative in <see cref="MyLangParser.operator_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperatorDecl([NotNull] MyLangParser.OperatorDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>OperatorDecl</c>
	/// labeled alternative in <see cref="MyLangParser.operator_decl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperatorDecl([NotNull] MyLangParser.OperatorDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>TimesStmt</c>
	/// labeled alternative in <see cref="MyLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimesStmt([NotNull] MyLangParser.TimesStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>TimesStmt</c>
	/// labeled alternative in <see cref="MyLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimesStmt([NotNull] MyLangParser.TimesStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>BreakStmt</c>
	/// labeled alternative in <see cref="MyLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreakStmt([NotNull] MyLangParser.BreakStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BreakStmt</c>
	/// labeled alternative in <see cref="MyLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreakStmt([NotNull] MyLangParser.BreakStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>AttrPoly</c>
	/// labeled alternative in <see cref="MyLangParser.attrib"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttrPoly([NotNull] MyLangParser.AttrPolyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AttrPoly</c>
	/// labeled alternative in <see cref="MyLangParser.attrib"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttrPoly([NotNull] MyLangParser.AttrPolyContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ClassDecl</c>
	/// labeled alternative in <see cref="MyLangParser.toplevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassDecl([NotNull] MyLangParser.ClassDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ClassDecl</c>
	/// labeled alternative in <see cref="MyLangParser.toplevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassDecl([NotNull] MyLangParser.ClassDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter([NotNull] MyLangParser.ParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter([NotNull] MyLangParser.ParameterContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>RShift</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRShift([NotNull] MyLangParser.RShiftContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>RShift</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRShift([NotNull] MyLangParser.RShiftContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>UnionDecl</c>
	/// labeled alternative in <see cref="MyLangParser.toplevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnionDecl([NotNull] MyLangParser.UnionDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UnionDecl</c>
	/// labeled alternative in <see cref="MyLangParser.toplevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnionDecl([NotNull] MyLangParser.UnionDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatements([NotNull] MyLangParser.StatementsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.statements"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatements([NotNull] MyLangParser.StatementsContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>StructDecl</c>
	/// labeled alternative in <see cref="MyLangParser.toplevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructDecl([NotNull] MyLangParser.StructDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StructDecl</c>
	/// labeled alternative in <see cref="MyLangParser.toplevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructDecl([NotNull] MyLangParser.StructDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>LShift</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLShift([NotNull] MyLangParser.LShiftContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LShift</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLShift([NotNull] MyLangParser.LShiftContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ClassExtendedDecl</c>
	/// labeled alternative in <see cref="MyLangParser.class_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassExtendedDecl([NotNull] MyLangParser.ClassExtendedDeclContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ClassExtendedDecl</c>
	/// labeled alternative in <see cref="MyLangParser.class_expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassExtendedDecl([NotNull] MyLangParser.ClassExtendedDeclContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.typeQualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeQualifier([NotNull] MyLangParser.TypeQualifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.typeQualifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeQualifier([NotNull] MyLangParser.TypeQualifierContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Sqrt</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSqrt([NotNull] MyLangParser.SqrtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Sqrt</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSqrt([NotNull] MyLangParser.SqrtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>GreaterEqualThan</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGreaterEqualThan([NotNull] MyLangParser.GreaterEqualThanContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>GreaterEqualThan</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGreaterEqualThan([NotNull] MyLangParser.GreaterEqualThanContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Tier17</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTier17([NotNull] MyLangParser.Tier17Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Tier17</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTier17([NotNull] MyLangParser.Tier17Context context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Tier13</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTier13([NotNull] MyLangParser.Tier13Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Tier13</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTier13([NotNull] MyLangParser.Tier13Context context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Tier14</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTier14([NotNull] MyLangParser.Tier14Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Tier14</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTier14([NotNull] MyLangParser.Tier14Context context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Tier15</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTier15([NotNull] MyLangParser.Tier15Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Tier15</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTier15([NotNull] MyLangParser.Tier15Context context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Tier16</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTier16([NotNull] MyLangParser.Tier16Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Tier16</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTier16([NotNull] MyLangParser.Tier16Context context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgumentList([NotNull] MyLangParser.ArgumentListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgumentList([NotNull] MyLangParser.ArgumentListContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Tier10</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTier10([NotNull] MyLangParser.Tier10Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Tier10</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTier10([NotNull] MyLangParser.Tier10Context context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Tier11</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTier11([NotNull] MyLangParser.Tier11Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Tier11</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTier11([NotNull] MyLangParser.Tier11Context context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Tier12</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTier12([NotNull] MyLangParser.Tier12Context context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Tier12</c>
	/// labeled alternative in <see cref="MyLangParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTier12([NotNull] MyLangParser.Tier12Context context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.post_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPost_OP([NotNull] MyLangParser.Post_OPContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.post_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPost_OP([NotNull] MyLangParser.Post_OPContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.mem_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMem_OP([NotNull] MyLangParser.Mem_OPContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.mem_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMem_OP([NotNull] MyLangParser.Mem_OPContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.anyTypeOrConsts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnyTypeOrConsts([NotNull] MyLangParser.AnyTypeOrConstsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.anyTypeOrConsts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnyTypeOrConsts([NotNull] MyLangParser.AnyTypeOrConstsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.and_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnd_OP([NotNull] MyLangParser.And_OPContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.and_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnd_OP([NotNull] MyLangParser.And_OPContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.assign_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssign_OP([NotNull] MyLangParser.Assign_OPContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.assign_OP"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssign_OP([NotNull] MyLangParser.Assign_OPContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.floatingType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloatingType([NotNull] MyLangParser.FloatingTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.floatingType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloatingType([NotNull] MyLangParser.FloatingTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>StaticCastExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStaticCastExpr([NotNull] MyLangParser.StaticCastExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StaticCastExpr</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStaticCastExpr([NotNull] MyLangParser.StaticCastExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>EachStmt</c>
	/// labeled alternative in <see cref="MyLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEachStmt([NotNull] MyLangParser.EachStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>EachStmt</c>
	/// labeled alternative in <see cref="MyLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEachStmt([NotNull] MyLangParser.EachStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.basicType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBasicType([NotNull] MyLangParser.BasicTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.basicType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBasicType([NotNull] MyLangParser.BasicTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>Pow</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPow([NotNull] MyLangParser.PowContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Pow</c>
	/// labeled alternative in <see cref="MyLangParser.expr_old"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPow([NotNull] MyLangParser.PowContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="MyLangParser.integerType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntegerType([NotNull] MyLangParser.IntegerTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MyLangParser.integerType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntegerType([NotNull] MyLangParser.IntegerTypeContext context);
}
} // namespace MyLang
